/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public class ProcessResourceNameScriptCompilerEvent extends ScriptCompilerEvent {
  private transient long swigCPtr;

  protected ProcessResourceNameScriptCompilerEvent(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.ProcessResourceNameScriptCompilerEvent_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ProcessResourceNameScriptCompilerEvent obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_ProcessResourceNameScriptCompilerEvent(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setMResourceType(ProcessResourceNameScriptCompilerEvent.ResourceType value) {
    OgreJNI.ProcessResourceNameScriptCompilerEvent_mResourceType_set(swigCPtr, this, value.swigValue());
  }

  public ProcessResourceNameScriptCompilerEvent.ResourceType getMResourceType() {
    return ProcessResourceNameScriptCompilerEvent.ResourceType.swigToEnum(OgreJNI.ProcessResourceNameScriptCompilerEvent_mResourceType_get(swigCPtr, this));
  }

  public void setMName(String value) {
    OgreJNI.ProcessResourceNameScriptCompilerEvent_mName_set(swigCPtr, this, value);
  }

  public String getMName() {
    return OgreJNI.ProcessResourceNameScriptCompilerEvent_mName_get(swigCPtr, this);
  }

  public static void setEventType(String value) {
    OgreJNI.ProcessResourceNameScriptCompilerEvent_eventType_set(value);
  }

  public static String getEventType() {
    return OgreJNI.ProcessResourceNameScriptCompilerEvent_eventType_get();
  }

  public ProcessResourceNameScriptCompilerEvent(ProcessResourceNameScriptCompilerEvent.ResourceType resourceType, String name) {
    this(OgreJNI.new_ProcessResourceNameScriptCompilerEvent(resourceType.swigValue(), name), true);
  }

  public enum ResourceType {
    TEXTURE,
    MATERIAL,
    GPU_PROGRAM,
    COMPOSITOR;

    public final int swigValue() {
      return swigValue;
    }

    public static ResourceType swigToEnum(int swigValue) {
      ResourceType[] swigValues = ResourceType.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (ResourceType swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + ResourceType.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private ResourceType() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private ResourceType(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private ResourceType(ResourceType swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
