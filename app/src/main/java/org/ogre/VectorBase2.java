/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public class VectorBase2 {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected VectorBase2(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VectorBase2 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_VectorBase2(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setX(float value) {
    OgreJNI.VectorBase2_x_set(swigCPtr, this, value);
  }

  public float getX() {
    return OgreJNI.VectorBase2_x_get(swigCPtr, this);
  }

  public void setY(float value) {
    OgreJNI.VectorBase2_y_set(swigCPtr, this, value);
  }

  public float getY() {
    return OgreJNI.VectorBase2_y_get(swigCPtr, this);
  }

  public SWIGTYPE_p_float ptr() {
    long cPtr = OgreJNI.VectorBase2_ptr__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public Vector2 midPoint(Vector2 vec) {
    return new Vector2(OgreJNI.VectorBase2_midPoint(swigCPtr, this, Vector2.getCPtr(vec), vec), true);
  }

  public float crossProduct(VectorBase2 rkVector) {
    return OgreJNI.VectorBase2_crossProduct(swigCPtr, this, VectorBase2.getCPtr(rkVector), rkVector);
  }

  public Vector2 perpendicular() {
    return new Vector2(OgreJNI.VectorBase2_perpendicular(swigCPtr, this), true);
  }

  public Vector2 randomDeviant(Radian angle) {
    return new Vector2(OgreJNI.VectorBase2_randomDeviant(swigCPtr, this, Radian.getCPtr(angle), angle), true);
  }

  public Radian angleTo(Vector2 other) {
    return new Radian(OgreJNI.VectorBase2_angleTo(swigCPtr, this, Vector2.getCPtr(other), other), true);
  }

}
