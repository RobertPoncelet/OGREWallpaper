/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public class Ogre implements OgreConstants {
  public static long FastHash(String data, long len, long hashSoFar) {
    return OgreJNI.FastHash__SWIG_0(data, len, hashSoFar);
  }

  public static long FastHash(String data, long len) {
    return OgreJNI.FastHash__SWIG_1(data, len);
  }

  public static String getBLANKSTRING() {
    return OgreJNI.BLANKSTRING_get();
  }

  public static int findCommandLineOpts(int numargs, SWIGTYPE_p_p_char argv, SWIGTYPE_p_std__mapT_std__string_bool_t unaryOptList, NameValuePairList binOptList) {
    return OgreJNI.findCommandLineOpts(numargs, SWIGTYPE_p_p_char.getCPtr(argv), SWIGTYPE_p_std__mapT_std__string_bool_t.getCPtr(unaryOptList), NameValuePairList.getCPtr(binOptList), binOptList);
  }

  public static SPFMDeleteT getSPFM_DELETE_T() {
    long cPtr = OgreJNI.SPFM_DELETE_T_get();
    return (cPtr == 0) ? null : new SPFMDeleteT(cPtr, false);
  }

  public static SPFMNone getSPFM_NONE() {
    long cPtr = OgreJNI.SPFM_NONE_get();
    return (cPtr == 0) ? null : new SPFMNone(cPtr, false);
  }

  public static Radian __mul__(float a, Radian b) {
    return new Radian(OgreJNI.__mul____SWIG_0(a, Radian.getCPtr(b), b), true);
  }

  public static Radian __div__(float a, Radian b) {
    return new Radian(OgreJNI.__div____SWIG_0(a, Radian.getCPtr(b), b), true);
  }

  public static Degree __mul__(float a, Degree b) {
    return new Degree(OgreJNI.__mul____SWIG_1(a, Degree.getCPtr(b), b), true);
  }

  public static Degree __div__(float a, Degree b) {
    return new Degree(OgreJNI.__div____SWIG_1(a, Degree.getCPtr(b), b), true);
  }

  public static Vector3 __mul__(Matrix3 m, Vector3 v) {
    return new Vector3(OgreJNI.__mul____SWIG_2(Matrix3.getCPtr(m), m, Vector3.getCPtr(v), v), true);
  }

  public static Matrix4 __mul__(Matrix4 m, Matrix4 m2) {
    return new Matrix4(OgreJNI.__mul____SWIG_3(Matrix4.getCPtr(m), m, Matrix4.getCPtr(m2), m2), true);
  }

  public static Matrix4 __add__(Matrix4 m, Matrix4 m2) {
    return new Matrix4(OgreJNI.__add__(Matrix4.getCPtr(m), m, Matrix4.getCPtr(m2), m2), true);
  }

  public static Matrix4 __sub__(Matrix4 m, Matrix4 m2) {
    return new Matrix4(OgreJNI.__sub__(Matrix4.getCPtr(m), m, Matrix4.getCPtr(m2), m2), true);
  }

  public static Affine3 __mul__(Affine3 m, Affine3 m2) {
    return new Affine3(OgreJNI.__mul____SWIG_4(Affine3.getCPtr(m), m, Affine3.getCPtr(m2), m2), true);
  }

  public static Vector3 __mul__(Matrix4 m, Vector3 v) {
    return new Vector3(OgreJNI.__mul____SWIG_5(Matrix4.getCPtr(m), m, Vector3.getCPtr(v), v), true);
  }

  public static Vector3 __mul__(Affine3 m, Vector3 v) {
    return new Vector3(OgreJNI.__mul____SWIG_6(Affine3.getCPtr(m), m, Vector3.getCPtr(v), v), true);
  }

  public static Vector4 __mul__(Matrix4 m, Vector4 v) {
    return new Vector4(OgreJNI.__mul____SWIG_7(Matrix4.getCPtr(m), m, Vector4.getCPtr(v), v), true);
  }

  public static Vector4 __mul__(Affine3 m, Vector4 v) {
    return new Vector4(OgreJNI.__mul____SWIG_8(Affine3.getCPtr(m), m, Vector4.getCPtr(v), v), true);
  }

  public static Vector4 __mul__(Vector4 v, Matrix4 mat) {
    return new Vector4(OgreJNI.__mul____SWIG_9(Vector4.getCPtr(v), v, Matrix4.getCPtr(mat), mat), true);
  }

  public static Plane __mul__(Matrix4 mat, Plane p) {
    return new Plane(OgreJNI.__mul____SWIG_10(Matrix4.getCPtr(mat), mat, Plane.getCPtr(p), p), true);
  }

  public static String getRGN_DEFAULT() {
    return OgreJNI.RGN_DEFAULT_get();
  }

  public static String getRGN_INTERNAL() {
    return OgreJNI.RGN_INTERNAL_get();
  }

  public static String getRGN_AUTODETECT() {
    return OgreJNI.RGN_AUTODETECT_get();
  }

  public static long getRENDER_QUEUE_COUNT() {
    return OgreJNI.RENDER_QUEUE_COUNT_get();
  }

}
