/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public class DefaultTextureManager extends TextureManager {
  private transient long swigCPtr;

  protected DefaultTextureManager(long cPtr, boolean cMemoryOwn) {
    super(OgreJNI.DefaultTextureManager_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DefaultTextureManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_DefaultTextureManager(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public boolean isHardwareFilteringSupported(TextureType arg0, PixelFormat arg1, int arg2, boolean arg3) {
    return OgreJNI.DefaultTextureManager_isHardwareFilteringSupported(swigCPtr, this, arg0.swigValue(), arg1.swigValue(), arg2, arg3);
  }

  public PixelFormat getNativeFormat(TextureType arg0, PixelFormat arg1, int arg2) {
    return PixelFormat.swigToEnum(OgreJNI.DefaultTextureManager_getNativeFormat(swigCPtr, this, arg0.swigValue(), arg1.swigValue(), arg2));
  }

  public Resource createImpl(String name, long handle, String group, boolean arg3, ManualResourceLoader arg4, NameValuePairList arg5) {
    long cPtr = OgreJNI.DefaultTextureManager_createImpl(swigCPtr, this, name, handle, group, arg3, ManualResourceLoader.getCPtr(arg4), arg4, NameValuePairList.getCPtr(arg5), arg5);
    return (cPtr == 0) ? null : new Resource(cPtr, false);
  }

  public DefaultTextureManager() {
    this(OgreJNI.new_DefaultTextureManager(), true);
  }

}
