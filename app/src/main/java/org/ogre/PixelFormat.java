/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public enum PixelFormat {
  PF_UNKNOWN(OgreJNI.PF_UNKNOWN_get()),
  PF_L8,
  PF_BYTE_L(OgreJNI.PF_BYTE_L_get()),
  PF_L16,
  PF_SHORT_L(OgreJNI.PF_SHORT_L_get()),
  PF_A8,
  PF_BYTE_A(OgreJNI.PF_BYTE_A_get()),
  PF_BYTE_LA,
  PF_R5G6B5,
  PF_B5G6R5,
  PF_A4R4G4B4,
  PF_A1R5G5B5,
  PF_R8G8B8,
  PF_B8G8R8,
  PF_A8R8G8B8,
  PF_A8B8G8R8,
  PF_B8G8R8A8,
  PF_A2R10G10B10,
  PF_A2B10G10R10,
  PF_DXT1,
  PF_DXT2,
  PF_DXT3,
  PF_DXT4,
  PF_DXT5,
  PF_FLOAT16_RGB,
  PF_FLOAT16_RGBA,
  PF_FLOAT32_RGB,
  PF_FLOAT32_RGBA,
  PF_X8R8G8B8,
  PF_X8B8G8R8,
  PF_R8G8B8A8,
  PF_DEPTH16,
  PF_DEPTH(OgreJNI.PF_DEPTH_get()),
  PF_SHORT_RGBA,
  PF_R3G3B2,
  PF_FLOAT16_R,
  PF_FLOAT32_R,
  PF_SHORT_GR,
  PF_FLOAT16_GR,
  PF_FLOAT32_GR,
  PF_SHORT_RGB,
  PF_PVRTC_RGB2,
  PF_PVRTC_RGBA2,
  PF_PVRTC_RGB4,
  PF_PVRTC_RGBA4,
  PF_PVRTC2_2BPP,
  PF_PVRTC2_4BPP,
  PF_R11G11B10_FLOAT,
  PF_R8_UINT,
  PF_R8G8_UINT,
  PF_R8G8B8_UINT,
  PF_R8G8B8A8_UINT,
  PF_R16_UINT,
  PF_R16G16_UINT,
  PF_R16G16B16_UINT,
  PF_R16G16B16A16_UINT,
  PF_R32_UINT,
  PF_R32G32_UINT,
  PF_R32G32B32_UINT,
  PF_R32G32B32A32_UINT,
  PF_R8_SINT,
  PF_R8G8_SINT,
  PF_R8G8B8_SINT,
  PF_R8G8B8A8_SINT,
  PF_R16_SINT,
  PF_R16G16_SINT,
  PF_R16G16B16_SINT,
  PF_R16G16B16A16_SINT,
  PF_R32_SINT,
  PF_R32G32_SINT,
  PF_R32G32B32_SINT,
  PF_R32G32B32A32_SINT,
  PF_R9G9B9E5_SHAREDEXP,
  PF_BC4_UNORM,
  PF_BC4_SNORM,
  PF_BC5_UNORM,
  PF_BC5_SNORM,
  PF_BC6H_UF16,
  PF_BC6H_SF16,
  PF_BC7_UNORM,
  PF_R8,
  PF_RG8,
  PF_R8_SNORM,
  PF_R8G8_SNORM,
  PF_R8G8B8_SNORM,
  PF_R8G8B8A8_SNORM,
  PF_R16_SNORM,
  PF_R16G16_SNORM,
  PF_R16G16B16_SNORM,
  PF_R16G16B16A16_SNORM,
  PF_ETC1_RGB8,
  PF_ETC2_RGB8,
  PF_ETC2_RGBA8,
  PF_ETC2_RGB8A1,
  PF_ATC_RGB,
  PF_ATC_RGBA_EXPLICIT_ALPHA,
  PF_ATC_RGBA_INTERPOLATED_ALPHA,
  PF_ASTC_RGBA_4X4_LDR,
  PF_ASTC_RGBA_5X4_LDR,
  PF_ASTC_RGBA_5X5_LDR,
  PF_ASTC_RGBA_6X5_LDR,
  PF_ASTC_RGBA_6X6_LDR,
  PF_ASTC_RGBA_8X5_LDR,
  PF_ASTC_RGBA_8X6_LDR,
  PF_ASTC_RGBA_8X8_LDR,
  PF_ASTC_RGBA_10X5_LDR,
  PF_ASTC_RGBA_10X6_LDR,
  PF_ASTC_RGBA_10X8_LDR,
  PF_ASTC_RGBA_10X10_LDR,
  PF_ASTC_RGBA_12X10_LDR,
  PF_ASTC_RGBA_12X12_LDR,
  PF_DEPTH32,
  PF_DEPTH32F,
  PF_COUNT,
  PF_BYTE_RGB(OgreJNI.PF_BYTE_RGB_get()),
  PF_BYTE_BGR(OgreJNI.PF_BYTE_BGR_get()),
  PF_BYTE_BGRA(OgreJNI.PF_BYTE_BGRA_get()),
  PF_BYTE_RGBA(OgreJNI.PF_BYTE_RGBA_get());

  public final int swigValue() {
    return swigValue;
  }

  public static PixelFormat swigToEnum(int swigValue) {
    PixelFormat[] swigValues = PixelFormat.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (PixelFormat swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + PixelFormat.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private PixelFormat() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private PixelFormat(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private PixelFormat(PixelFormat swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

