/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public class ColourBlendState {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ColourBlendState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ColourBlendState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_ColourBlendState(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setWriteR(boolean value) {
    OgreJNI.ColourBlendState_writeR_set(swigCPtr, this, value);
  }

  public boolean getWriteR() {
    return OgreJNI.ColourBlendState_writeR_get(swigCPtr, this);
  }

  public void setWriteG(boolean value) {
    OgreJNI.ColourBlendState_writeG_set(swigCPtr, this, value);
  }

  public boolean getWriteG() {
    return OgreJNI.ColourBlendState_writeG_get(swigCPtr, this);
  }

  public void setWriteB(boolean value) {
    OgreJNI.ColourBlendState_writeB_set(swigCPtr, this, value);
  }

  public boolean getWriteB() {
    return OgreJNI.ColourBlendState_writeB_get(swigCPtr, this);
  }

  public void setWriteA(boolean value) {
    OgreJNI.ColourBlendState_writeA_set(swigCPtr, this, value);
  }

  public boolean getWriteA() {
    return OgreJNI.ColourBlendState_writeA_get(swigCPtr, this);
  }

  public void setSourceFactor(SceneBlendFactor value) {
    OgreJNI.ColourBlendState_sourceFactor_set(swigCPtr, this, value.swigValue());
  }

  public SceneBlendFactor getSourceFactor() {
    return SceneBlendFactor.swigToEnum(OgreJNI.ColourBlendState_sourceFactor_get(swigCPtr, this));
  }

  public void setDestFactor(SceneBlendFactor value) {
    OgreJNI.ColourBlendState_destFactor_set(swigCPtr, this, value.swigValue());
  }

  public SceneBlendFactor getDestFactor() {
    return SceneBlendFactor.swigToEnum(OgreJNI.ColourBlendState_destFactor_get(swigCPtr, this));
  }

  public void setSourceFactorAlpha(SceneBlendFactor value) {
    OgreJNI.ColourBlendState_sourceFactorAlpha_set(swigCPtr, this, value.swigValue());
  }

  public SceneBlendFactor getSourceFactorAlpha() {
    return SceneBlendFactor.swigToEnum(OgreJNI.ColourBlendState_sourceFactorAlpha_get(swigCPtr, this));
  }

  public void setDestFactorAlpha(SceneBlendFactor value) {
    OgreJNI.ColourBlendState_destFactorAlpha_set(swigCPtr, this, value.swigValue());
  }

  public SceneBlendFactor getDestFactorAlpha() {
    return SceneBlendFactor.swigToEnum(OgreJNI.ColourBlendState_destFactorAlpha_get(swigCPtr, this));
  }

  public void setOperation(SceneBlendOperation value) {
    OgreJNI.ColourBlendState_operation_set(swigCPtr, this, value.swigValue());
  }

  public SceneBlendOperation getOperation() {
    return SceneBlendOperation.swigToEnum(OgreJNI.ColourBlendState_operation_get(swigCPtr, this));
  }

  public void setAlphaOperation(SceneBlendOperation value) {
    OgreJNI.ColourBlendState_alphaOperation_set(swigCPtr, this, value.swigValue());
  }

  public SceneBlendOperation getAlphaOperation() {
    return SceneBlendOperation.swigToEnum(OgreJNI.ColourBlendState_alphaOperation_get(swigCPtr, this));
  }

  public ColourBlendState() {
    this(OgreJNI.new_ColourBlendState(), true);
  }

  public boolean blendingEnabled() {
    return OgreJNI.ColourBlendState_blendingEnabled(swigCPtr, this);
  }

}
