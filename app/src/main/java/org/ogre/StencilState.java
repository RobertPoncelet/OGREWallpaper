/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public class StencilState {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected StencilState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(StencilState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_StencilState(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setCompareOp(CompareFunction value) {
    OgreJNI.StencilState_compareOp_set(swigCPtr, this, value.swigValue());
  }

  public CompareFunction getCompareOp() {
    return CompareFunction.swigToEnum(OgreJNI.StencilState_compareOp_get(swigCPtr, this));
  }

  public void setStencilFailOp(StencilOperation value) {
    OgreJNI.StencilState_stencilFailOp_set(swigCPtr, this, value.swigValue());
  }

  public StencilOperation getStencilFailOp() {
    return StencilOperation.swigToEnum(OgreJNI.StencilState_stencilFailOp_get(swigCPtr, this));
  }

  public void setDepthFailOp(StencilOperation value) {
    OgreJNI.StencilState_depthFailOp_set(swigCPtr, this, value.swigValue());
  }

  public StencilOperation getDepthFailOp() {
    return StencilOperation.swigToEnum(OgreJNI.StencilState_depthFailOp_get(swigCPtr, this));
  }

  public void setDepthStencilPassOp(StencilOperation value) {
    OgreJNI.StencilState_depthStencilPassOp_set(swigCPtr, this, value.swigValue());
  }

  public StencilOperation getDepthStencilPassOp() {
    return StencilOperation.swigToEnum(OgreJNI.StencilState_depthStencilPassOp_get(swigCPtr, this));
  }

  public void setReferenceValue(long value) {
    OgreJNI.StencilState_referenceValue_set(swigCPtr, this, value);
  }

  public long getReferenceValue() {
    return OgreJNI.StencilState_referenceValue_get(swigCPtr, this);
  }

  public void setCompareMask(long value) {
    OgreJNI.StencilState_compareMask_set(swigCPtr, this, value);
  }

  public long getCompareMask() {
    return OgreJNI.StencilState_compareMask_get(swigCPtr, this);
  }

  public void setWriteMask(long value) {
    OgreJNI.StencilState_writeMask_set(swigCPtr, this, value);
  }

  public long getWriteMask() {
    return OgreJNI.StencilState_writeMask_get(swigCPtr, this);
  }

  public void setEnabled(boolean value) {
    OgreJNI.StencilState_enabled_set(swigCPtr, this, value);
  }

  public boolean getEnabled() {
    return OgreJNI.StencilState_enabled_get(swigCPtr, this);
  }

  public void setTwoSidedOperation(boolean value) {
    OgreJNI.StencilState_twoSidedOperation_set(swigCPtr, this, value);
  }

  public boolean getTwoSidedOperation() {
    return OgreJNI.StencilState_twoSidedOperation_get(swigCPtr, this);
  }

  public StencilState() {
    this(OgreJNI.new_StencilState(), true);
  }

}
