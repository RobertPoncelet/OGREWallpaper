/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public enum VertexElementType {
  VET_FLOAT1(OgreJNI.VET_FLOAT1_get()),
  VET_FLOAT2(OgreJNI.VET_FLOAT2_get()),
  VET_FLOAT3(OgreJNI.VET_FLOAT3_get()),
  VET_FLOAT4(OgreJNI.VET_FLOAT4_get()),
  VET_COLOUR(OgreJNI.VET_COLOUR_get()),
  VET_SHORT1(OgreJNI.VET_SHORT1_get()),
  VET_SHORT2(OgreJNI.VET_SHORT2_get()),
  VET_SHORT3(OgreJNI.VET_SHORT3_get()),
  VET_SHORT4(OgreJNI.VET_SHORT4_get()),
  VET_UBYTE4(OgreJNI.VET_UBYTE4_get()),
  VET_COLOUR_ARGB(OgreJNI.VET_COLOUR_ARGB_get()),
  VET_COLOUR_ABGR(OgreJNI.VET_COLOUR_ABGR_get()),
  VET_DOUBLE1(OgreJNI.VET_DOUBLE1_get()),
  VET_DOUBLE2(OgreJNI.VET_DOUBLE2_get()),
  VET_DOUBLE3(OgreJNI.VET_DOUBLE3_get()),
  VET_DOUBLE4(OgreJNI.VET_DOUBLE4_get()),
  VET_USHORT1(OgreJNI.VET_USHORT1_get()),
  VET_USHORT2(OgreJNI.VET_USHORT2_get()),
  VET_USHORT3(OgreJNI.VET_USHORT3_get()),
  VET_USHORT4(OgreJNI.VET_USHORT4_get()),
  VET_INT1(OgreJNI.VET_INT1_get()),
  VET_INT2(OgreJNI.VET_INT2_get()),
  VET_INT3(OgreJNI.VET_INT3_get()),
  VET_INT4(OgreJNI.VET_INT4_get()),
  VET_UINT1(OgreJNI.VET_UINT1_get()),
  VET_UINT2(OgreJNI.VET_UINT2_get()),
  VET_UINT3(OgreJNI.VET_UINT3_get()),
  VET_UINT4(OgreJNI.VET_UINT4_get()),
  VET_BYTE4(OgreJNI.VET_BYTE4_get()),
  VET_BYTE4_NORM(OgreJNI.VET_BYTE4_NORM_get()),
  VET_UBYTE4_NORM(OgreJNI.VET_UBYTE4_NORM_get()),
  VET_SHORT2_NORM(OgreJNI.VET_SHORT2_NORM_get()),
  VET_SHORT4_NORM(OgreJNI.VET_SHORT4_NORM_get()),
  VET_USHORT2_NORM(OgreJNI.VET_USHORT2_NORM_get()),
  VET_USHORT4_NORM(OgreJNI.VET_USHORT4_NORM_get());

  public final int swigValue() {
    return swigValue;
  }

  public static VertexElementType swigToEnum(int swigValue) {
    VertexElementType[] swigValues = VertexElementType.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (VertexElementType swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + VertexElementType.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private VertexElementType() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private VertexElementType(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private VertexElementType(VertexElementType swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

