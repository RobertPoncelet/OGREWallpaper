/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public class TargetRenderState extends RenderState {
  private transient long swigCPtr;

  protected TargetRenderState(long cPtr, boolean cMemoryOwn) {
    super(RTShaderJNI.TargetRenderState_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TargetRenderState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RTShaderJNI.delete_TargetRenderState(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public TargetRenderState() {
    this(RTShaderJNI.new_TargetRenderState(), true);
  }

  public void link(RenderState other, Pass srcPass, Pass dstPass) {
    RTShaderJNI.TargetRenderState_link(swigCPtr, this, RenderState.getCPtr(other), other, Pass.getCPtr(srcPass), srcPass, Pass.getCPtr(dstPass), dstPass);
  }

  public void updateGpuProgramsParams(Renderable rend, Pass pass, SWIGTYPE_p_Ogre__AutoParamDataSource source, SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t pLightList) {
    RTShaderJNI.TargetRenderState_updateGpuProgramsParams(swigCPtr, this, Renderable.getCPtr(rend), rend, Pass.getCPtr(pass), pass, SWIGTYPE_p_Ogre__AutoParamDataSource.getCPtr(source), SWIGTYPE_p_Ogre__HashedVectorT_Ogre__Light_p_t.getCPtr(pLightList));
  }

  public void addSubRenderStateInstance(SubRenderState subRenderState) {
    RTShaderJNI.TargetRenderState_addSubRenderStateInstance(swigCPtr, this, SubRenderState.getCPtr(subRenderState), subRenderState);
  }

  public void removeSubRenderStateInstance(SubRenderState subRenderState) {
    RTShaderJNI.TargetRenderState_removeSubRenderStateInstance(swigCPtr, this, SubRenderState.getCPtr(subRenderState), subRenderState);
  }

  public void acquirePrograms(Pass pass) {
    RTShaderJNI.TargetRenderState_acquirePrograms(swigCPtr, this, Pass.getCPtr(pass), pass);
  }

  public void releasePrograms(Pass pass) {
    RTShaderJNI.TargetRenderState_releasePrograms(swigCPtr, this, Pass.getCPtr(pass), pass);
  }

  public static void setUserKey(String value) {
    RTShaderJNI.TargetRenderState_UserKey_set(value);
  }

  public static String getUserKey() {
    return RTShaderJNI.TargetRenderState_UserKey_get();
  }

}
