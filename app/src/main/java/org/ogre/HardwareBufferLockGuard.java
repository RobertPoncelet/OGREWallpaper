/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.ogre;

public class HardwareBufferLockGuard {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected HardwareBufferLockGuard(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HardwareBufferLockGuard obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgreJNI.delete_HardwareBufferLockGuard(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public HardwareBufferLockGuard() {
    this(OgreJNI.new_HardwareBufferLockGuard__SWIG_0(), true);
  }

  public HardwareBufferLockGuard(HardwareBuffer p, HardwareBuffer.LockOptions options) {
    this(OgreJNI.new_HardwareBufferLockGuard__SWIG_1(HardwareBuffer.getCPtr(p), p, options.swigValue()), true);
  }

  public HardwareBufferLockGuard(HardwareBuffer p, long offset, long length, HardwareBuffer.LockOptions options) {
    this(OgreJNI.new_HardwareBufferLockGuard__SWIG_2(HardwareBuffer.getCPtr(p), p, offset, length, options.swigValue()), true);
  }

  public void unlock() {
    OgreJNI.HardwareBufferLockGuard_unlock(swigCPtr, this);
  }

  public void lock(HardwareBuffer p, HardwareBuffer.LockOptions options) {
    OgreJNI.HardwareBufferLockGuard_lock__SWIG_0(swigCPtr, this, HardwareBuffer.getCPtr(p), p, options.swigValue());
  }

  public void lock(HardwareBuffer p, long offset, long length, HardwareBuffer.LockOptions options) {
    OgreJNI.HardwareBufferLockGuard_lock__SWIG_1(swigCPtr, this, HardwareBuffer.getCPtr(p), p, offset, length, options.swigValue());
  }

  public void setPBuf(HardwareBuffer value) {
    OgreJNI.HardwareBufferLockGuard_pBuf_set(swigCPtr, this, HardwareBuffer.getCPtr(value), value);
  }

  public HardwareBuffer getPBuf() {
    long cPtr = OgreJNI.HardwareBufferLockGuard_pBuf_get(swigCPtr, this);
    return (cPtr == 0) ? null : new HardwareBuffer(cPtr, false);
  }

  public void setPData(SWIGTYPE_p_void value) {
    OgreJNI.HardwareBufferLockGuard_pData_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getPData() {
    long cPtr = OgreJNI.HardwareBufferLockGuard_pData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

}
